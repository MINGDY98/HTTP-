# 5장 웹서버

- 여러 종류의 소프트웨어 및 하드웨어 웹 서버에 대해 조사
- HTTP 통신을 진단하는 간단한 웹서버 코드로 작성
- 어떻게 웹 서버가 HTTP 트랜잭션을 처리하는지 설명

## 웹 서버란?
웹 서버 소프트웨어와 웹페이지 제공에 특화된 장비(컴퓨터)모두 가리킴
모두 리소스에 대한 HTTP 요청을 받아 콘텐츠를 클라이언트에게 돌려주는 특징 존재
- HTTP 프로토콜 구현
- 웹 리소스 관리
- 웹 서버 관리 기능 제공
- TCP 커넥션 관리에 대한 책임을 운영체제와 나눠가짐

#### 웹서버의 여러 형태
- 다목적 소프트웨어 웹 서버
: 많은 웹서버 프로그램 중 몇몇개가 주로 사용됨(마이크로소프트 웹서버, 아파치 웹 서버, nginx 웹서버) 
- 전자기기안에 컴퓨터 칩으로 웹서버가 내장된 형태
: 일반 소비자용 ex 프린터나 가전제품

## 웹 서버 동작

type-o-serve 예시

특정 포트인 8080포트로 로 수신하는 type-oserve 진단 서버 시작
브라우저에 이 웹서버로 접근가능해짐 http://www.joes-hardware.com:8080/foo/bar/blah.txt에 접근
type-o-serve 프로그램은 브라우저로부터 HTTP 요청 메시지받고, HTTP응답 메시지를 브라우저에게 돌려줌

1. 커넥션을 맺는다. - 원하는 클라이언트의 접속을 받아들인다. (특정 포트를 통해)
2. HTTP 요청 메시지를 네트워크로부터 읽어 들인다.
3. 요청 메시지를 해석하고 행동을 취한다. (요청을 처리한다.)
4. 메세지에서 지정된 리소스에 접근한다.
5. 응답을 만든다.
6. 응답을 보낸다.
7. 트랜잭션을 로그로 남긴다.

### 1단계 클라이언트 커넥션 수락

1.클라이언트가 서버에 대한 지속적 커넥션을 갖고 있지 않다면, 새롭게 연결해야한다.
클라이언트가 웹서버에 TCP 커넥션을 요청하면 웹 서버는 그 커넥션을 맺고 TCP 커넥션에서 IP주소를 추출해 어떤 클라이언트인지 확인한다.
이때 웹 서버는 원치않은 컨넥션일경우 닫을 수 있다.
```
대부분 웹서버는 reverse DNS로 클라이언트의 IP주소를 클라이언트의 호스트명으로 변환하도록 설정되어있다.
호스트명을 구체적인 접근 제어와 로깅을 위해 사용할 수 있는데, hostname lookup은 꽤 많은 시간이 걸려 웹 트랜잭션이 느려질 수 있어 특정 콘텐츠에 대해서만 켜둔다.
ex) 아파치는 HTML, CGI 리소스만을 위해 호스트명 분석을 켬

또 몇몇 웹서버는 IETF ident 프로토콜 지원. ident 프로토콜은 서버에게 어떤 사용자 이름이 HTTP 커넥션을 초기화했는지 찾아낼 수있게 해줌
-> 이 정보는 웹서버 로깅에 유요해 널리쓰이는 Common log format의 두번째 필드는 각 HTTP 요청의 ident 사용자 이름을 담음
-> 조직 내부에서 사용하고 공공 인터넷에서는 작동 X

- 많은 클라이언트 PC는 Identd 신원확인 프로토콜 데몬 소프트웨어 실행안함
- ident 프로토콜은 HTTP 트랜잭션을 유의미하게 지연시킴
- 방화벽이 ident 트래픽에 들어오는 것을 막는 경우가 많음
- ident 프로토콜은 안전하지 않고 조작하기 쉬움
- ident 프로토콜은 가상 IP 주소를 잘 지원하지 않음
- 클라이언트 사용자 이름의 노출로 인한 프라이버시 침해의 우려가 있음
```

### 2단계 요청 메서드 읽어들이기

- 요청줄을 파싱. 웹서버는 파싱해서 이해하는 것이 가능한 수준의 분량을 확보할 때까지 데이터를 네트워크로부터 읽어서 메시지 일부분을 메모리에 임시 저장해놨다가, 
이해함

#### 커넥션 입력/출력 처리 아키텍처

: 고성능 웹서버는 수천개의 커넥션을 동시에 열 수 있도록 지원. 요처을 처리하는 방식은 다양함

`단일 스레드 웹 서버`

: 한 번에 하나씩 요청을 처리함. 구현하기에는 간단하나 처리 도중에 모든 다른 커넥션 무시됨.

`멀티프로세스와 멀티스레드 웹 서버`

: 여러 요청을 동시에 처리하기 위해 여러 개의 프로세스 혹은 고효율 스레드를 할당 
스레드/프로세스는 필요할 때 만들어질 수 있고, 미리 만들어질 수도 있음.
몇몇 서버는 매 커넥션마다 스레드/프로세스 하나를 할당하지만, 동시 커넥션 처리시 너무 많은 메모리/시스템 리소스를 소비하기에 많은 멀티스레드 웹 서비스가 스레드/프로세스의 최대 개수에 재한을 검


`다중 I/O 서버`

- 대량의 커넥션을 지원하기 위해, 많은 웹 서버는 다중 아키텍처와 채택함 
모든 커넥션은 동시에 그 활동을 감시당한다. 커넥션의 상태가 바뀌면, 그 커넥션에 대해 작은 양의 처리가 수행되고 그 처리가 완료되면, 커넥션은 다음번 상태 변경을 위해 열린 커넥션 목록으로 들어감. 
스레드와 프로세스는 유휴 상태의 커넥션에 매여 기다리느라 리소스를 낭비하지 않음

`다중 멀티스레드 웹 서버`

- 몇몇  시스템은 자신의 컴퓨터 플랫폼에 올라와있는 CPU 여러 개의 이점을 살리기 위해 멀티스레딩과 다중화를 결합. 여러개의 스레드는 각각 열려있는 커넥션을 감시하고 각 커넥션에 대해 조금씩 작업을 수행함

### 3단계 요청처리 - 많이 다뤄온 주제

### 4단계 리소스의 매핑과 접근

웹서버는 HTML 페이지나 JPEG 이미지 같은 미리 만들어진 콘텐츠 제공. 
서버 위에서 동작하는 리소스 생성 애플리케이션을 통해 만들어진 동적 콘텐츠도 제공
웹서버가 클라이언트에 콘텐츠를 전달하려면, 그전에 요청 메시지의 URI에 대응하는 알맞는 콘텐츠나 콘텐츠 생성기를 웹 서버에서 찾아서 그 콘텐츠의 원천을 식별해야함

#### Docroot

웹 서버는 여러 종류의 리소스 매핑을 지원.
가장 단순한 형태는 요청 URI를 웹 서버의 파일 시스템 안에 있는 파일 이름으로 사용하는 것 
웹 서버  파일 시스템의 특별한 폴더를 웹 콘텐츠를 위해 예약해놓고 이 폴더는 문서 루트 혹은 docroot로 불림. 
Htpd.conf 설정 파일에 DocumentRoot 줄을 추가하여 아파치 웹 서버의 문서 루트를 설정할 수 있음.

http://www.joes-hardware.com/../와 같은 URI는 대부분의 성숙한 웹서버가 허용하지 않음 - 문서 루트 위의 파일을 보는 것 비허용

*아파치 웹 서버에서는 각 가상 웹 사이트의 VirtualHost 블록이 가상 서버에 대한 DocumewntRoot지시자를 포함하도록 설정해야함 (18장 가상호스팅)
?????

- 또한 docroot는 사용자들이 한 대의 웹 서버에서 각자의 개인 웹사이트를 만들 수 있도록 해줌. 빗금 /과 물결표~ 다음에 사용자 이름이 오는 것으로 시작하는 개인 문서 루트. 
주로 public_html로 불리는 디렉토리가 개인 docroot이지만 설정에 따라 다름.

#### 디렉터리 목록

웹서버는 경로가 파일이 아닌 디렉터리를 가리키는 디렉터리 URL에 대한 요청을 받을 수 있음 

```
웹서버가 요청을 받을 경우 할 수 있는 액션들

- 에러를 반환
- 디렉터리 대신 특별한 '색인 파일'을 반환
- 디렉터리를 탐색해서 그 내용을 담은 HTML 페이지를 반환

```

- 대부분의 웹서버는 요청한 URL에 대응되는 디렉터리안에서 index.html(혹은 index.htm) 이름 붙은 파일을 찾음 


#### 동적 콘텐츠 리소스 매핑

- 웹 서버는 URI를 동적 리소스(콘텐츠를 생성하는 프로그램)에 매핑할 수도 있음. 요청에 맞게 콘텐츠를 생성하는 프로그램에 URI를 매핑
웹 서버들 중 애플리케이션 서버라고 불리는 것들은 웹 서버를 복잡한 백엔드 애플리케이션과 연결하는 일을 함
#### 서버사이드 인클루드 지원

- 어떤 리소스가 서버사이드 인클루드를 포함하고 있는 것으로 설정되어 있다면, 서버는 그 리소스의ㅣ 콘텐츠를 클라이언트에게 보내기 전 처리
- 서버는 콘텐츠에 변수 이름이나 내장된 스크립트가 될 수 있는 어떤 특별한 패턴이 있는지 검사를 받음 그래서 실행 가능한 스크립트의 출력 값으로 치환됨. 이것은 동적 콘텐츠를 만든느 쉬운 방법

#### 접근 제어 할당
- 웹 서버는 각가 리소스에 대해 접근 제어 할당 가능

### 5단계 응답 만들기

- 서버가 리소스를 식별하면, 서버는 요청 메서드로 서술되는 동작을 수행한 후 응답메시지를 반환함 
```
응답 메시지 : 응답 상태코드, 응답 헤더, 응답 본문

본문이 있을 경우, 응답 메시지는 주로 MIME 타입을 서술하는 Content-Type헤더, 길이를 서술하는 Content-length 헤더, 실제 응답 본문 내용 포함함
```

#### 웹서버의 MIME 타입 결정하기

- MIME 타입과 리소스를 연결하는 여러가지 방법

1. mime.types





